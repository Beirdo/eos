openapi: 3.0.0
info:
  title: EOSIO Wallet API
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  contact:
    url: https://eos.io
tags:
  - name: eosio
servers:
  - url: "{protocol}://{host}:{port}/v1/wallet"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      host:
        default: localhost
      port:
        default: "8080"
components:
  securitySchemes: {}
  schemas: {}
security: 
 - {}
paths:

  /set_timeout:
    post:
      summary: set_timeout
      description: Set wallet timeout
      operationId: set_timeout
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              description: timeout in s
            example: 60
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: returns nothing
                
  /sign_transaction:
    post:
      summary: sign_transaction
      description: Sign a transaction
      operationId: sign_transaction
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction
                - keys
                - chain_id
              items:
                properties:
                  transaction:
                    $ref: "https://eosio.github.io/schemata/v2.0/oas/SignedTransaction.yaml"
                  keys:
                    type: array
                    description: Public keys to sign with
                    items:
                      $ref: "https://eosio.github.io/schemata/v2.0/oas/PublicKey.yaml"
                  chain_id:
                    $ref: 'https://eosio.github.io/schemata/v2.0/oas/Sha256.yaml'
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "https://eosio.github.io/schemata/v2.0/oas/SignedTransaction.yaml"

  /sign_digest:
    post:
      summary: sign_digest
      description: Sign a digest
      operationId: sign_digest
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - digest
                - key
              items:
                properties:
                  digest:
                    $ref: "https://eosio.github.io/schemata/v2.0/oas/Sha256.yaml"
                  key:
                    $ref: "https://eosio.github.io/schemata/v2.0/oas/PublicKey.yaml"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                 $ref: "https://eosio.github.io/schemata/v2.0/oas/Signature.yaml"

  /create:
    post:
      summary: create
      description: Creates a new wallet
      operationId: create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: wallet name
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: Password

  /open:
    post:
      summary: open
      description: Opens a waller
      operationId: open
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: wallet name
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returns Nothing

  /lock_all:
    post:
      summary: lock_all
      description: Locks all wallets
      operationId: lock_all
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              description: takes no parameters
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: returns nothing

  /lock:
    post:
      summary: lock
      description: Locks a wallet
      operationId: lock
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: wallet name
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returns Nothing

  /unlock:
    post:
      summary: unlock
      description: Unlock a wallet
      operationId: unlock
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: name, password
              items:
                type: string
              minItems: 2
              maxItems: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: returns nothing

  /import_key:
    post:
      summary: import_key
      description: Import a key into a wallet
      operationId: import_key
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: name, key
              items:
                type: string
              minItems: 2
              maxItems: 2

      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: returns nothing
                
  /remove_key:
    post:
      summary: remove_key
      description: Remove key from wallet
      operationId: remove_key
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              description: name, key, password
              minItems: 3
              maxItems: 3
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returns Nothing
                
  /create_key:
    post:
      summary: create_key
      description: Creates a new key
      operationId: create_key
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: name, key_type
              items:
                type: string
              minItems: 2
              maxItems: 2
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: key

  /list_wallets:
    post:
      summary: list_wallets
      description: Lists all wallets
      operationId: list_wallets
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              description: no inputs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: list of wallet names
                items:
                  type: string

  /list_keys:
    post:
      summary: list_keys
      description: Lists all key pairs
      operationId: list_keys
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: name, password
              items:
                type: string
              minItems: 2
              maxItems: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: "array of [publicKey, privateKey]"
                items:
                  type: array
                  description: "[publicKey, privateKey]"
                  minItems: 2
                  maxItems: 2
                  items:
                    type: string

  /get_public_keys:
    post:
      summary: get_public_keys
      description: Get list of public keys
      operationId: get_public_keys
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              description: no inputs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: list of public keys
                items:
                  type: string